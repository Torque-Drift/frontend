/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  TorqueDriftCars,
  TorqueDriftCarsInterface,
} from "../TorqueDriftCars";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "carAddress",
        type: "address",
      },
    ],
    name: "CarAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCarAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "rarity",
        type: "uint8",
      },
    ],
    name: "InvalidRarity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "InvalidVersion",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "carId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "rarity",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hashPower",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "cooldownSeconds",
        type: "uint32",
      },
    ],
    name: "CarCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "carIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "carAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCreated",
        type: "uint256",
      },
    ],
    name: "CarsCreatedBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_DAILY_MINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_PER_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedContracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canUserMintToday",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "carStates",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "mint",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "hashPower",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "cooldownSeconds",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "lastMaintenance",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "carId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "createGameCar",
    outputs: [
      {
        internalType: "address",
        name: "carAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "rarities",
        type: "uint8[]",
      },
      {
        internalType: "uint8[]",
        name: "versions",
        type: "uint8[]",
      },
    ],
    name: "createGameCarBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "carAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dailyMints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "generateRandomHashPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "carAddress",
        type: "address",
      },
    ],
    name: "getCarState",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "mint",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "rarity",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "hashPower",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "cooldownSeconds",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMaintenance",
            type: "uint32",
          },
        ],
        internalType: "struct ITorqueDriftStructs.CarState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "getCooldownSeconds",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCarAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserCarCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserDailyMintStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "currentMints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainingMints",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInventory",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "mint",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "hashPower",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "efficiency",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "lastMaintenance",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "lastFarmingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accumulatedReward",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "rarity",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "slotIndex",
            type: "uint8",
          },
        ],
        internalType: "struct ITorqueDriftStructs.CarInfo[]",
        name: "ownedCars",
        type: "tuple[]",
      },
      {
        internalType: "uint8",
        name: "totalOwned",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "totalInventoryHashPower",
        type: "uint256",
      },
      {
        internalType: "uint8[5]",
        name: "equippedSlots",
        type: "uint8[5]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastMintDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastResetDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameContract",
        type: "address",
      },
    ],
    name: "setGameContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "carAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "newMaintenanceTime",
        type: "uint32",
      },
    ],
    name: "updateCarMaintenance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userCars",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "carAddress",
        type: "address",
      },
    ],
    name: "userOwnsCar",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class TorqueDriftCars__factory {
  static readonly abi = _abi;
  static createInterface(): TorqueDriftCarsInterface {
    return new Interface(_abi) as TorqueDriftCarsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TorqueDriftCars {
    return new Contract(address, _abi, runner) as unknown as TorqueDriftCars;
  }
}
